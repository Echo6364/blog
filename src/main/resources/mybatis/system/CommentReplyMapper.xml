<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.echo.project.system.comment.mapper.CommentReplyMapper">
  <resultMap id="BaseResultMap" type="com.echo.project.system.comment.domain.CommentReply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="reply_id" jdbcType="INTEGER" property="replyId" />
    <result column="reply_type" jdbcType="INTEGER" property="replyType" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="from_user_id" jdbcType="INTEGER" property="fromUserId" />
    <result column="to_user_id" jdbcType="INTEGER" property="toUserId" />
    <result column="article_id" jdbcType="INTEGER" property="articleID" />
  </resultMap>
  <sql id="Base_Column_List">
    id, comment_id, reply_id, reply_type, content, from_user_id, to_user_id, article_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment_reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment_reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.echo.project.system.comment.domain.CommentReply" useGeneratedKeys="true">
    insert into comment_reply (comment_id, reply_id, reply_type, 
      content, from_user_id, to_user_id
      )
    values (#{commentId,jdbcType=INTEGER}, #{replyId,jdbcType=INTEGER}, #{replyType,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{fromUserId,jdbcType=INTEGER}, #{toUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.echo.project.system.comment.domain.CommentReply" useGeneratedKeys="true">
    insert into comment_reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="replyId != null">
        reply_id,
      </if>
      <if test="replyType != null">
        reply_type,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="fromUserId != null">
        from_user_id,
      </if>
      <if test="toUserId != null">
        to_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="replyId != null">
        #{replyId,jdbcType=INTEGER},
      </if>
      <if test="replyType != null">
        #{replyType,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null">
        #{fromUserId,jdbcType=INTEGER},
      </if>
      <if test="toUserId != null">
        #{toUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.echo.project.system.comment.domain.CommentReply">
    update comment_reply
    <set>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="replyId != null">
        reply_id = #{replyId,jdbcType=INTEGER},
      </if>
      <if test="replyType != null">
        reply_type = #{replyType,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null">
        from_user_id = #{fromUserId,jdbcType=INTEGER},
      </if>
      <if test="toUserId != null">
        to_user_id = #{toUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.echo.project.system.comment.domain.CommentReply">
    update comment_reply
    set comment_id = #{commentId,jdbcType=INTEGER},
      reply_id = #{replyId,jdbcType=INTEGER},
      reply_type = #{replyType,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      from_user_id = #{fromUserId,jdbcType=INTEGER},
      to_user_id = #{toUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <insert id="addCommentReply" keyColumn="id" keyProperty="id" parameterType="com.echo.project.system.comment.domain.CommentReply" useGeneratedKeys="true">
    insert into comment_reply (comment_id, reply_id, reply_type,
      content, from_user_id, to_user_id, article_id
      )
    values (#{commentId,jdbcType=INTEGER}, #{replyId,jdbcType=INTEGER}, #{replyType,jdbcType=INTEGER},
      #{content,jdbcType=VARCHAR}, #{fromUserId,jdbcType=INTEGER}, #{toUserId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}
      )
  </insert>
</mapper>